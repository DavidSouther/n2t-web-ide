{"version":3,"file":"static/js/450.ee65e856.chunk.js","mappings":"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","sources":["../../node_modules/@davidsouther/jiffies/lib/esm/dom/css/constants.js","../../node_modules/@davidsouther/jiffies/lib/esm/dom/css/core.js","../../node_modules/@davidsouther/jiffies/lib/esm/dom/css/border.js","../../node_modules/@davidsouther/jiffies/lib/esm/dom/css/sizing.js","../../components/src/inline_edit.tsx","../../components/src/virtual_scroll.tsx","../../components/src/chips/memory.tsx"],"sourcesContent":["export const Sizes = {\n    none: \"0px\",\n    sm: \"0.125rem\",\n    \"\": \"0.25rem\",\n    md: \"0.375rem\",\n    lg: \"0.5rem\",\n    xl: \"0.75rem\",\n    \"2xl\": \"1rem\",\n    \"3xl\": \"1.5rem\",\n    full: \"9999px\",\n};\nexport const Sides = {\n    \"\": \"\",\n    t: \"Top\",\n    r: \"Right\",\n    l: \"Left\",\n    b: \"Bottom\",\n    tl: \"TopLeft\",\n    tr: \"TopRight\",\n    bl: \"BottomLeft\",\n    br: \"BottomRight\",\n};\nexport const Widths = {\n    \"1/4\": \"25%\",\n    \"1/2\": \"50%\",\n    \"3/4\": \"75%\",\n    full: \"100%\",\n};\n","import { Sides, Sizes } from \"./constants.js\";\nexport function isSide(v) {\n    return Sides[v] !== undefined;\n}\nexport function isSize(v) {\n    return Sizes[v] !== undefined;\n}\nexport function getSize(size) {\n    return Sizes[size];\n}\nexport function getSide(side) {\n    switch (side) {\n        case \"t\":\n            return [...getSide(\"tl\"), ...getSide(\"tr\")];\n        case \"r\":\n            return [...getSide(\"tr\"), ...getSide(\"br\")];\n        case \"b\":\n            return [...getSide(\"br\"), ...getSide(\"bl\")];\n        case \"l\":\n            return [...getSide(\"tl\"), ...getSide(\"bl\")];\n        default:\n            return [Sides[side]];\n    }\n}\n","import { isSide, getSize, getSide } from \"./core.js\";\nexport function rounded(size = \"\", side = \"\") {\n    if (isSide(size)) {\n        side = size;\n        size = \"\";\n    }\n    const sized = getSize(size);\n    return getSide(side).reduce((prev, curr) => {\n        if (curr === \"\") {\n            prev.borderRadius = sized;\n        }\n        else {\n            // @ts-ignore\n            prev[`border${curr}Radius`] = sized;\n        }\n        return prev;\n    }, {});\n}\nexport function border({ side = \"\", style = \"solid\", radius = \"\", width = 1, color = \"black\", }) {\n    return {};\n}\nexport function inset(width, color1 = \"gray\", color2 = \"lightgray\") {\n    return {\n        ...border({ side: \"tl\", width, color: color1, radius: \"none\" }),\n        ...border({ side: \"br\", width, color: color2, radius: \"none\" }),\n    };\n}\n","import { Widths } from \"./constants.js\";\nexport function width(amount, block) {\n    if (amount === undefined && Widths[block] !== undefined) {\n        amount = block;\n    }\n    return {\n        ...(block === \"inline\" ? { display: \"inline-block\" } : {}),\n        width: Widths[amount] ?? \"0\",\n    };\n}\n","import { width } from \"@davidsouther/jiffies/lib/esm/dom/css/sizing.js\";\nimport { useCallback, useState } from \"react\";\nimport { useStateInitializer } from \"./react.js\";\n\nconst Mode = { VIEW: 0, EDIT: 1 };\n\nexport const InlineEdit = (props: {\n  mode?: keyof typeof Mode;\n  value: string;\n  onChange: (value: string) => void;\n}) => {\n  const [mode, setMode] = useState(props.mode ?? Mode.VIEW);\n  const [value, setValue] = useStateInitializer(props.value);\n\n  const render = () => {\n    switch (mode) {\n      case Mode.EDIT:\n        return edit();\n      case Mode.VIEW:\n        return view();\n      default:\n        return <span />;\n    }\n  };\n\n  const view = () => (\n    <span\n      style={{ cursor: \"text\", ...width(\"full\", \"inline\") }}\n      onClick={() => {\n        setMode(Mode.EDIT);\n      }}\n    >\n      {value}\n    </span>\n  );\n\n  const doSelect = useCallback(\n    (ref: HTMLInputElement | null) => ref?.select(),\n    []\n  );\n  const doChange = useCallback(\n    (target: HTMLInputElement) => {\n      setMode(Mode.VIEW);\n      setValue(target.value ?? \"\");\n      props.onChange(target.value ?? \"\");\n    },\n    [props, setMode, setValue]\n  );\n  const edit = () => {\n    const edit = (\n      <span style={{ display: \"block\", position: \"relative\" }}>\n        <input\n          ref={doSelect}\n          style={{\n            zIndex: \"10\",\n            position: \"absolute\",\n            left: \"0\",\n            marginTop: \"-0.375rem\",\n          }}\n          onBlur={({ target }) => doChange(target)}\n          onKeyPress={({ key, target }) => {\n            if (key === \"Enter\") {\n              doChange(target as HTMLInputElement);\n            }\n          }}\n          type=\"text\"\n          defaultValue={value}\n        />\n      </span>\n    );\n    return edit;\n  };\n\n  return render();\n};\n\nexport default InlineEdit;\n","/* eslint-disable @typescript-eslint/ban-types */\nimport {\n  Key,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n} from \"react\";\n\nexport interface VirtualScrollSettings {\n  /**Minimum offset into the adapter. Default is 0.  */\n  minIndex: number;\n  /** Maximum offset into the adapter. Default is Number.MAX_SAFE_INTEGER.  */\n  maxIndex: number;\n  /** Initial index to start rendering from. Default is minIndex.  */\n  startIndex: number;\n  /**\n   * Number of items to render in visible area. Default is entire range from\n   * minIndex to maxIndex.\n   */\n  count: number;\n  /**\n   * Maximum number of items to render on either side of the visible area.\n   * Default is `count`.\n   */\n  tolerance: number;\n  /** Height of each item, in pixels. Default is 20px. */\n  itemHeight: number;\n}\n\nexport interface VirtualScrollDataAdapter<T> {\n  (offset: number, limit: number): Iterable<T>;\n}\n\nexport function arrayAdapter<T>(data: T[]): VirtualScrollDataAdapter<T> {\n  return (offset, limit) => data.slice(offset, offset + limit);\n}\n\nexport interface VirtualScrollProps<T, U extends ReactNode> {\n  settings?: Partial<VirtualScrollSettings>;\n  get: VirtualScrollDataAdapter<T>;\n  row: (t: T) => U;\n  rowKey: (t: T) => Key;\n}\n\nexport function fillVirtualScrollSettings(\n  settings: Partial<VirtualScrollSettings>\n): VirtualScrollSettings {\n  const {\n    minIndex = 0,\n    maxIndex = Number.MAX_SAFE_INTEGER,\n    startIndex = 0,\n    itemHeight = 20,\n    count = Math.max(maxIndex - minIndex, 1),\n    tolerance = count,\n  } = settings;\n\n  return { minIndex, maxIndex, startIndex, itemHeight, count, tolerance };\n}\n\nexport function initialState<T>(\n  settings: VirtualScrollSettings,\n  adapter: VirtualScrollDataAdapter<T>\n): VirtualScrollState<T> {\n  // From Denis Hilt, https://blog.logrocket.com/virtual-scrolling-core-principles-and-basic-implementation-in-react/\n  const { minIndex, maxIndex, startIndex, itemHeight, count, tolerance } =\n    settings;\n  const bufferedItems = count + 2 * tolerance;\n  const itemsAbove = Math.max(0, startIndex - tolerance - minIndex);\n\n  const viewportHeight = count * itemHeight;\n  const totalHeight = Math.max(maxIndex - minIndex, 1) * itemHeight;\n  const toleranceHeight = tolerance * itemHeight;\n  const bufferHeight = viewportHeight + 2 * toleranceHeight;\n  const topPaddingHeight = itemsAbove * itemHeight;\n  const bottomPaddingHeight = totalHeight - (topPaddingHeight + bufferHeight);\n\n  const state: VirtualScrollState<T> = {\n    scrollTop: 0,\n    settings,\n    viewportHeight,\n    totalHeight,\n    toleranceHeight,\n    bufferedItems,\n    topPaddingHeight,\n    bottomPaddingHeight,\n    data: [],\n  };\n\n  return {\n    ...state,\n    ...doScroll(topPaddingHeight + toleranceHeight, state, adapter),\n  };\n}\n\nexport function getData<T>(\n  minIndex: number,\n  maxIndex: number,\n  offset: number,\n  limit: number,\n  get: VirtualScrollDataAdapter<T>\n): T[] {\n  const start = Math.max(0, minIndex, offset);\n  const end = Math.min(maxIndex, offset + limit - 1);\n  const data = get(start, end - start);\n  return [...data];\n}\n\ninterface ScrollUpdate<T> {\n  scrollTop: number;\n  topPaddingHeight: number;\n  bottomPaddingHeight: number;\n  data: T[];\n}\n\nexport function doScroll<T>(\n  scrollTop: number,\n  state: VirtualScrollState<T>,\n  get: VirtualScrollDataAdapter<T>\n): ScrollUpdate<T> {\n  const {\n    totalHeight,\n    toleranceHeight,\n    bufferedItems,\n    settings: { itemHeight, minIndex, maxIndex },\n  } = state;\n  const index =\n    minIndex + Math.floor((scrollTop - toleranceHeight) / itemHeight);\n  const data = getData(minIndex, maxIndex, index, bufferedItems, get);\n  const topPaddingHeight = Math.max((index - minIndex) * itemHeight, 0);\n  const bottomPaddingHeight = Math.max(\n    totalHeight - (topPaddingHeight + data.length * itemHeight),\n    0\n  );\n\n  return { scrollTop, topPaddingHeight, bottomPaddingHeight, data };\n}\n\ninterface VirtualScrollState<T> {\n  settings: VirtualScrollSettings;\n  scrollTop: number; // px\n  bufferedItems: number; // count\n  totalHeight: number; // px\n  viewportHeight: number; // px\n  topPaddingHeight: number; // px\n  bottomPaddingHeight: number; // px\n  toleranceHeight: number; // px\n  data: T[];\n}\n\nconst scrollReducer =\n  <T extends {}>(get: VirtualScrollDataAdapter<T>) =>\n  (state: VirtualScrollState<T>, scrollTop: number) => ({\n    ...state,\n    ...doScroll(scrollTop, state, get),\n  });\n\nexport const VirtualScroll = <T extends {}, U extends ReactNode = ReactNode>(\n  props: VirtualScrollProps<T, U> & { className?: string }\n) => {\n  const viewportRef = useRef<HTMLDivElement | null>(null);\n\n  const { settings, startState, reducer } = useMemo(() => {\n    const settings = fillVirtualScrollSettings(props.settings ?? {});\n    const startState = initialState<T>(settings, props.get);\n    const reducer = scrollReducer(props.get);\n    return { settings, reducer, startState };\n  }, [props.settings, props.get]);\n\n  const [state, dispatchScroll] = useReducer(reducer, startState);\n\n  useEffect(() => {\n    if (viewportRef.current !== null) {\n      dispatchScroll(viewportRef.current.scrollTop);\n    }\n  }, [settings, props.row]);\n\n  const initialScroll = useCallback(\n    (div: HTMLDivElement | null) => {\n      if (div) {\n        div.scrollTop = viewportRef.current\n          ? viewportRef.current.scrollTop\n          : settings.startIndex * settings.itemHeight;\n      }\n      viewportRef.current = div;\n    },\n    [viewportRef, settings.startIndex, settings.itemHeight]\n  );\n\n  const rows = state.data.map((d) => (\n    <div key={props.rowKey(d)} style={{ height: `${settings.itemHeight}px` }}>\n      {props.row(d)}\n    </div>\n  ));\n\n  return (\n    <div\n      ref={initialScroll}\n      style={{\n        height: `${state.viewportHeight}px`,\n        overflowY: \"scroll\",\n        overflowAnchor: \"none\",\n      }}\n      className={props.className ?? \"\"}\n      onScroll={(e) => dispatchScroll((e.target as HTMLDivElement).scrollTop)}\n    >\n      <div style={{ height: `${state.topPaddingHeight}px` }} />\n      {rows}\n      <div style={{ height: `${state.bottomPaddingHeight}px` }} />\n    </div>\n  );\n};\n\nexport default VirtualScroll;\n","import { rounded } from \"@davidsouther/jiffies/lib/esm/dom/css/border.js\";\nimport {\n  ChangeEvent,\n  ReactNode,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\nimport {\n  Format,\n  FORMATS,\n  MemoryAdapter,\n} from \"@nand2tetris/simulator/cpu/memory.js\";\nimport { asm } from \"@nand2tetris/simulator/util/asm.js\";\nimport { bin, dec, hex } from \"@nand2tetris/simulator/util/twos.js\";\nimport { loadBlob, loadAsm, loadHack } from \"@nand2tetris/simulator/loader.js\";\n\nimport InlineEdit from \"../inline_edit.js\";\nimport VirtualScroll, { VirtualScrollSettings } from \"../virtual_scroll.js\";\nimport { useClockReset } from \"../clockface.js\";\nimport { BaseContext } from \"../stores/base.context.js\";\n\nconst ITEM_HEIGHT = 34;\n\nexport const MemoryBlock = ({\n  memory,\n  jmp = { value: 0 },\n  highlight = -1,\n  editable = false,\n  format = dec,\n  onChange = () => undefined,\n}: {\n  jmp?: { value: number };\n  memory: MemoryAdapter;\n  highlight?: number;\n  editable?: boolean;\n  format?: (v: number) => string;\n  onChange?: (i: number, value: string, previous: number) => void;\n}) => {\n  const settings = useMemo<Partial<VirtualScrollSettings>>(\n    () => ({\n      count: Math.min(memory.size, 25),\n      maxIndex: memory.size,\n      itemHeight: ITEM_HEIGHT,\n      startIndex: jmp.value,\n    }),\n    [memory.size, jmp]\n  );\n  const get = useCallback(\n    (offset: number, count: number) =>\n      memory\n        .range(offset, offset + count)\n        .map((v, i) => [i + offset, v] as [number, number]),\n    [memory]\n  );\n  const row = useCallback(\n    ([i, v]: [number, number]) => (\n      <MemoryCell\n        index={i}\n        value={format(v)}\n        editable={editable}\n        highlight={i === highlight}\n        onChange={onChange}\n      />\n    ),\n    [format, editable, highlight, onChange]\n  );\n\n  return (\n    <VirtualScroll<[number, number], ReactNode>\n      settings={settings}\n      get={get}\n      row={row}\n      rowKey={([i]) => i}\n    />\n  );\n};\n\nexport const MemoryCell = ({\n  index,\n  value,\n  highlight = false,\n  editable = false,\n  onChange = () => undefined,\n}: {\n  index: number;\n  value: string;\n  highlight?: boolean;\n  editable?: boolean;\n  onChange?: (i: number, value: string, previous: number) => void;\n}) => (\n  <div style={{ display: \"flex\", height: \"100%\" }}>\n    <code\n      style={{\n        ...rounded(\"none\"),\n        ...(highlight ? { background: \"var(--mark-background-color)\" } : {}),\n      }}\n    >\n      {hex(index)}\n    </code>\n    <code\n      style={{\n        flex: \"1\",\n        textAlign: \"right\",\n        ...rounded(\"none\"),\n        ...(highlight ? { background: \"var(--mark-background-color)\" } : {}),\n      }}\n    >\n      {editable ? (\n        <InlineEdit\n          value={value}\n          onChange={(newValue: string) =>\n            onChange(index, newValue, Number(value))\n          }\n        />\n      ) : (\n        <span>{value}</span>\n      )}\n    </code>\n  </div>\n);\n\nexport const Memory = ({\n  name = \"Memory\",\n  highlight = -1,\n  editable = true,\n  memory,\n  format = \"dec\",\n}: {\n  name?: string;\n  editable?: boolean;\n  highlight?: number;\n  memory: MemoryAdapter;\n  format: Format;\n}) => {\n  const [fmt, setFormat] = useState(format);\n  const [jmp, setJmp] = useState(\"\");\n  const [goto, setGoto] = useState({ value: 0 });\n\n  const jumpTo = () => {\n    setGoto({\n      value: !isNaN(parseInt(jmp)) && isFinite(parseInt(jmp)) ? Number(jmp) : 0,\n    });\n  };\n\n  const fileUploadRef = useRef<HTMLInputElement>(null);\n  const doLoad = useCallback(() => {\n    fileUploadRef.current?.click();\n  }, [fileUploadRef]);\n\n  const { setStatus } = useContext(BaseContext);\n  const upload = useCallback(async (event: ChangeEvent<HTMLInputElement>) => {\n    if (!event.target.files?.length) {\n      setStatus(\"No file selected\");\n      return;\n    }\n    const file = event.target.files[0];\n    const source = await file.text();\n    const loader = file.name.endsWith(\"hack\")\n      ? loadHack\n      : file.name.endsWith(\"asm\")\n      ? loadAsm\n      : loadBlob;\n    const bytes = await loader(source);\n    memory.loadBytes(bytes);\n    event.target.value = \"\"; // Clear the input out\n    jumpTo();\n  }, []);\n\n  const doUpdate = useCallback(\n    (i: number, v: string) => {\n      memory.update(i, v, fmt ?? \"dec\");\n    },\n    [memory, fmt]\n  );\n\n  useClockReset(() => {\n    setJmp(\"\");\n    setGoto({ value: 0 });\n  });\n\n  return (\n    <article className={`panel memory ${name}`}>\n      <header>\n        <div>{name}</div>\n        <fieldset role=\"group\">\n          <input\n            type=\"file\"\n            style={{ display: \"none\" }}\n            ref={fileUploadRef}\n            onChange={upload}\n          />\n          <button onClick={doLoad} className=\"flex-0\">\n            {/* <Icon name=\"upload_file\" /> */}\n            📂\n          </button>\n          <input\n            style={{ width: \"4em\", height: \"100%\" }}\n            placeholder=\"Jump\"\n            value={jmp}\n            onKeyDown={({ key }) => key === \"Enter\" && jumpTo()}\n            onChange={({ target: { value } }) => setJmp(value)}\n          />\n          <button onClick={jumpTo} className=\"flex-0\">\n            {/* <Icon name=\"move_down\" /> */}\n            ⤵️\n          </button>\n          <select value={fmt} onChange={(e) => setFormat(e.target.value)}>\n            {FORMATS.map((option) => (\n              <option key={option}>{option}</option>\n            ))}\n          </select>\n        </fieldset>\n      </header>\n      <MemoryBlock\n        jmp={goto}\n        memory={memory}\n        highlight={highlight}\n        editable={editable}\n        format={(v: number) => doFormat(fmt, v)}\n        onChange={doUpdate}\n      />\n    </article>\n  );\n};\n\nexport default Memory;\n\nfunction doFormat(format: Format, v: number): string {\n  switch (format) {\n    case \"bin\":\n      return bin(v);\n    case \"hex\":\n      return hex(v);\n    case \"asm\":\n      return asm(v);\n    case \"dec\":\n    default:\n      return dec(v);\n  }\n}\n"],"names":["Sizes","none","sm","md","lg","xl","full","Sides","t","r","l","b","tl","tr","bl","br","Widths","isSide","v","undefined","getSize","size","getSide","side","rounded","sized","reduce","prev","curr","borderRadius","width","amount","block","display","Mode","props","useState","mode","setMode","useStateInitializer","value","setValue","view","_jsx","style","cursor","onClick","children","doSelect","useCallback","ref","select","doChange","target","onChange","edit","position","zIndex","left","marginTop","onBlur","onKeyPress","key","type","defaultValue","render","doScroll","scrollTop","state","get","totalHeight","toleranceHeight","bufferedItems","settings","itemHeight","minIndex","maxIndex","index","Math","floor","data","offset","limit","start","max","min","getData","topPaddingHeight","bottomPaddingHeight","length","viewportRef","useRef","useMemo","Number","MAX_SAFE_INTEGER","startIndex","count","tolerance","fillVirtualScrollSettings","startState","adapter","itemsAbove","viewportHeight","initialState","reducer","useReducer","dispatchScroll","useEffect","current","row","initialScroll","div","rows","map","d","height","rowKey","_jsxs","overflowY","overflowAnchor","className","onScroll","e","MemoryBlock","memory","jmp","highlight","editable","format","dec","range","i","MemoryCell","VirtualScroll","background","hex","flex","textAlign","InlineEdit","newValue","Memory","name","fmt","setFormat","setJmp","goto","setGoto","jumpTo","isNaN","parseInt","isFinite","fileUploadRef","doLoad","click","setStatus","useContext","BaseContext","upload","event","files","file","text","source","loader","endsWith","loadHack","loadAsm","loadBlob","bytes","loadBytes","doUpdate","update","useClockReset","role","placeholder","onKeyDown","FORMATS","option","bin","asm","doFormat"],"sourceRoot":""}